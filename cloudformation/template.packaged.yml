AWSTemplateFormatVersion: 2010-09-09
Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: mursal-cf-test
        S3Key: 5bd019e57ca7d06c437e578c38c54928
      FunctionName:
        Ref: LambdaFuncName
      Handler: index.lambda_handler
      Runtime: python3.9
      Role:
        Fn::GetAtt:
        - IAMRoleForLambda
        - Arn
    DependsOn:
    - DynamoDBTable
    - S3Bucket
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Ref: DynamoDBTableName
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '5'
        WriteCapacityUnits: '5'
    DependsOn:
    - IAMRoleForLambda
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Ref: S3BucketName
    DependsOn:
    - IAMRoleForLambda
  APIGatewayRestAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name:
        Ref: APIName
    DependsOn:
    - LambdaFunction
  APIGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId:
        Ref: APIGatewayRestAPI
      ParentId:
        Fn::GetAtt:
        - APIGatewayRestAPI
        - RootResourceId
      PathPart:
        Ref: LambdaFuncName
    DependsOn:
    - APIGatewayRestAPI
  APIGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: APIGatewayRestAPI
      ResourceId:
        Ref: APIGatewayResource
      HttpMethod: POST
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        IntegrationResponses:
        - StatusCode: 200
        IntegrationHttpMethod: POST
        Uri:
          Fn::Sub:
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFuncNameArn}/invocations
          - LambdaFuncNameArn:
              Fn::GetAtt:
              - LambdaFunction
              - Arn
    DependsOn:
    - APIGatewayResource
  APIGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: APIGatewayRestAPI
      StageName:
        Ref: EnvironmentName
    DependsOn:
    - APIGatewayMethod
  APIGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Principal: apigateway.amazonaws.com
    DependsOn:
    - APIGatewayDeployment
  IAMRoleForLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: Policy_api-lambda-db
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:BatchGetItem
            - dynamodb:BatchWriteItem
            - dynamodb:TagResource
            - dynamodb:UntagResource
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
            Resource:
              Fn::Join:
              - ''
              - - 'arn:aws:dynamodb:'
                - Ref: AWS::Region
                - ':'
                - Ref: AWS::AccountId
                - :table/
                - Ref: DynamoDBTableName
      - PolicyName: Policy_api-lambda-S3
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - s3:*
            - s3-object-lambda:*
            Resource:
              Fn::Join:
              - ''
              - - arn:aws:s3
                - ':::'
                - Ref: S3BucketName
                - /*
Parameters:
  LambdaFuncName:
    Type: String
    Default: create-todo
  DynamoDBTableName:
    Type: String
    Default: todos
  APIName:
    Type: String
    Default: todo-api
  EnvironmentName:
    Type: String
    Default: Prod
  S3BucketName:
    Type: String
    Default: todo-s3bucket
